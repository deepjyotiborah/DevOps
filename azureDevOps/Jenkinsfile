#!groovy

pipeline {
  agent any
  stages {
    stage('Maven Install') {
      agent {
        docker {
          image 'maven:3.5.0'
        }
      }
      steps {
        sh 'mvn -f azureDevOps/ clean install'
      }
    }

    stage('Docker Build') {
      agent any
      steps {
        sh 'docker build -t deepborah/spring-petclinic:latest -f azureDevOps/Dockerfile-jenkins .'
      }
    }

    stage('Docker Push') {
      agent any
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockerHub', passwordVariable: 'dockerHubPassword', usernameVariable: 'dockerHubUser')]) {
          sh "docker login -u ${env.dockerHubUser} -p ${env.dockerHubPassword}"
          sh 'docker push deepborah/spring-petclinic:latest'
        }
      }
    }

    stage('Run ansible script') {
        agent any
        steps {
           invokePlaybook()
        }
        
    }
  }
}

def invokePlaybook() {

  ansiblePlaybook
    //credentialsId: 'jenkins-gitlab-ssh-key',
    //extras: '--extra-vars @extra_vars.json',
    //installation: 'Ansible-2.3.0',
    inventory: 'azureDevOps/hosts',
    playbook: 'azureDevOps/deployWithAnsible.yml',
    sudo: true, sudoUser: "adminuser"

}